{
  "StartAt": "Build",
  "States": {
    "Build": {
      "Type": "Task",
      "Resource": "arn:aws:states:::codebuild:startBuild.sync",
      "Parameters": {
        "ProjectName": "${BuildProject}",
        "SourceVersion.$": "$.head_commit.id"
      },
      "ResultPath": "$.BuildOutput",
      "Next": "On Default Branch?"
    },
    "On Default Branch?": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.on_default_branch",
          "BooleanEquals": true,
          "Next": "Check if Superseded"
        },
        {
          "Variable": "$.on_default_branch",
          "BooleanEquals": false,
          "Next": "Success"
        }
      ]
    },
    "Check if Superseded": {
      "Type": "Task",
      "Resource": "arn:aws:states:::sqs:sendMessage.waitForTaskToken",
      "ResultPath": "$.SupersededOutput",
      "Next": "Was Superseded?",
      "Parameters": {
        "QueueUrl": "${SupersessionQueue}",
        "MessageGroupId": "${GithubRepo}",
        "MessageBody": {
          "Pipeline": "${GithubRepo}",
          "CommitTimestamp.$": "$.head_commit.timestamp",
          "Token.$": "$$.Task.Token"
        }
      }
    },
    "Was Superseded?": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.SupersededOutput.Superseded",
          "BooleanEquals": true,
          "Next": "Success"
        },
        {
          "Variable": "$.SupersededOutput.Superseded",
          "BooleanEquals": false,
          "Next": "Deploy to Shared"
        }
      ]
    },
    "Deploy Utilities to Shared": {
      "Type": "Task",
      "Resource": "arn:aws:states:::sqs:sendMessage.waitForTaskToken",
      "ResultPath": "$.UtilityOutputs.Shared",
      "Parameters": {
        "QueueUrl": "${DeploymentQueue}",
        "MessageGroupId": "${GithubRepo}",
        "MessageBody": {
          "StackName": "cfn-utilities",
          "ZipLocation.$": "$.BuildOutput.Build.Artifacts.Location",
          "TemplateFileName": "Utilities.template.yml",
          "RoleArn": "${SharedRoleArn}",
          "Token.$": "$$.Task.Token",
          "Capabilities": ["CAPABILITY_NAMED_IAM"]
        }
      },
      "Next": "Deploy Utilities to Agents"
    },
    "Deploy Utilities to Agents": {
      "Type": "Parallel",
      "ResultPath": "$.UtilityOutputs.Agents",
      "Branches": [
        {
          "StartAt": "Dev",
          "States": {
            "Dev": {
              "Type": "Task",
              "Resource": "arn:aws:states:::sqs:sendMessage.waitForTaskToken",
              "Parameters": {
                "QueueUrl": "${DeploymentQueue}",
                "MessageGroupId": "${GithubRepo}",
                "MessageBody": {
                  "StackName": "cfn-utilities",
                  "ZipLocation.$": "$.BuildOutput.Build.Artifacts.Location",
                  "TemplateFileName": "Utilities.template.yml",
                  "RoleArn": "${DevRoleArn}",
                  "Token.$": "$$.Task.Token",
                  "ParameterOverrides": {
                    "MasterAccountId": "${AWS::AccountId}",
                    "NetworkCidr": "10.2.0.0/16",
                    "PeeringConnectionId.$": "$.BuildOutputs.Build.ExportedEnvironmentVariables[?Name==\"DEV_PEERING_ID\"].Value"
                  },
                  "Capabilities": ["CAPABILITY_NAMED_IAM"]
                }
              },
              "End": true
            }
          }
        },
        {
          "StartAt": "Prod",
          "States": {
            "Prod": {
              "Type": "Task",
              "Resource": "arn:aws:states:::sqs:sendMessage.waitForTaskToken",
              "Parameters": {
                "QueueUrl": "${DeploymentQueue}",
                "MessageGroupId": "${GithubRepo}",
                "MessageBody": {
                  "StackName": "cfn-utilities",
                  "ZipLocation.$": "$.BuildOutput.Build.Artifacts.Location",
                  "TemplateFileName": "Utilities.template.yml",
                  "RoleArn": "${ProdRoleArn}",
                  "Token.$": "$$.Task.Token",
                  "ParameterOverrides": {
                    "MasterAccountId": "${AWS::AccountId}",
                    "NetworkCidr": "10.3.0.0/16",
                    "PeeringConnectionId.$": "$.BuildOutputs.Build.ExportedEnvironmentVariables[?Name==\"PROD_PEERING_ID\"].Value"
                  },
                  "Capabilities": ["CAPABILITY_NAMED_IAM"]
                }
              },
              "End": true
            }
          }
        }
      ]
    },
    "Deploy Resources": {
      "Type": "Task",
      "Resource": "arn:aws:states:::sqs:sendMessage.waitForTaskToken",
      "Parameters": {
        "QueueUrl": "${DeploymentQueue}",
        "MessageGroupId": "${GithubRepo}",
        "MessageBody": {
          "StackName": "cfn-resources",
          "ZipLocation.$": "$.BuildOutput.Build.Artifacts.Location",
          "TemplateFileName": "Resources.template.yml",
          "RoleArn": "${SharedRoleArn}",
          "Token.$": "$$.Task.Token",
          "Capabilities": ["CAPABILITY_IAM"]
        }
      },
      "Next": "Deploy DNS"
    },
    "Deploy DNS": {
      "Type": "Task",
      "Resource": "arn:aws:states:::sqs:sendMessage.waitForTaskToken",
      "Parameters": {
        "QueueUrl": "${DeploymentQueue}",
        "MessageGroupId": "${GithubRepo}",
        "MessageBody": {
          "StackName": "cfn-dns",
          "ZipLocation.$": "$.BuildOutput.Build.Artifacts.Location",
          "TemplateFileName": "Dns.template.yml",
          "TemplateConfigurationFileName": "Dns.config.json",
          "RoleArn": "${SharedRoleArn}",
          "Token.$": "$$.Task.Token",
          "Capabilities": ["CAPABILITY_IAM"]
        }
      },
      "Next": "Deploy Core"
    },
    "Deploy Core": {
      "Type": "Task",
      "Resource": "arn:aws:states:::sqs:sendMessage.waitForTaskToken",
      "Parameters": {
        "QueueUrl": "${DeploymentQueue}",
        "MessageGroupId": "${GithubRepo}",
        "MessageBody": {
          "StackName": "cfn-core",
          "ZipLocation.$": "$.BuildOutput.Build.Artifacts.Location",
          "TemplateFileName": "Core.template.yml",
          "TemplateConfigurationFileName": "Core.config.json",
          "RoleArn": "${SharedRoleArn}",
          "Token.$": "$$.Task.Token",
          "ParameterOverrides": {
            "DevVpcId.$": "$.UtilityOutputs.Agents[0].VpcId",
            "ProdVpcId.$": "$.UtilityOutputs.Agents[1].VpcId",
            "DevLoadBalancerDnsName": "$.UtilityOutputs.Agents[0].LoadBalancerDnsName",
            "ProdLoadBalancerDnsName": "$.UtilityOutputs.Agents[1].LoadBalancerDnsName"
          },
          "Capabilities": ["CAPABILITY_IAM", "CAPABILITY_AUTO_EXPAND"]
        }
      },
      "End": true
    }
  }
}
