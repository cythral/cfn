# TODO: Create a script that generates this file and updates the proj properties automatically
# (after creating a delegation set and assigning nice names to each nameserver)
Description: DNS resources for CloudFormation services
Parameters:
  DelegationSetId:
    Type: String
    Description: ID of a reusable delegation set to use for the hosted zone

  DomainName:
    Type: String
    Description: Domain name to use

  SoaContactEmail:
    Type: String
    Description: Contact email to put in the SOA record

Mappings:
  Nameservers:
    Morag:
      Ipv4Address: "205.251.194.29"
      Ipv6Address: "2600:9000:5302:1d00::1"

    Niall:
      Ipv4Address: "205.251.196.129"
      Ipv6Address: "2600:9000:5304:8100::1"

    Hugo:
      Ipv4Address: "205.251.192.139"
      Ipv6Address: "2600:9000:5300:8b00::1"

    Ardain:
      Ipv4Address: "205.251.198.250"
      Ipv6Address: "2600:9000:5306:fa00::1"

Resources:
  PrimaryHostedZone:
    Type: Custom::HostedZone
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Properties:
      ServiceToken: !ImportValue cfn-hosted-zone-resource:HostedZoneLambdaArn
      Name: !Ref DomainName
      DelegationSetId: !Ref DelegationSetId
      HostedZoneConfig:
        Comment: The hosted zone for brigh.id

  DnsSecKmsKey:
    Type: AWS::KMS::Key
    Properties:
      KeySpec: RSA_4096
      KeyUsage: SIGN_VERIFY
      KeyPolicy:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: kms:*
            Resource: "*"
            Principal:
              AWS: !Ref AWS::AccountId

  DnsSecKeySigningKey:
    Type: AWS::Route53::KeySigningKey
    Properties:
      Name: brighid
      Status: ACTIVE
      HostedZoneId: !Ref PrimaryHostedZone
      KeyManagementServiceArn: !Ref DnsSecKmsKey

  MoragRecordSetGroup:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      Comment: Morag resource records
      HostedZoneId: !Ref PrimaryHostedZone
      RecordSets:
        - Name: !Sub morag.${DomainName}
          Type: A
          TTL: 60
          ResourceRecords:
            - !FindInMap [Nameservers, Morag, Ipv4Address]
        - Name: !Sub morag.${DomainName}
          Type: AAAA
          TTL: 60
          ResourceRecords:
            - !FindInMap [Nameservers, Morag, Ipv6Address]

  NiallRecordSetGroup:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      Comment: Niall resource records
      HostedZoneId: !Ref PrimaryHostedZone
      RecordSets:
        - Name: !Sub niall.${DomainName}
          Type: A
          TTL: 60
          ResourceRecords:
            - !FindInMap [Nameservers, Niall, Ipv4Address]
        - Name: !Sub niall.${DomainName}
          Type: AAAA
          TTL: 60
          ResourceRecords:
            - !FindInMap [Nameservers, Niall, Ipv6Address]

  HugoRecordSetGroup:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      Comment: Hugo resource records
      HostedZoneId: !Ref PrimaryHostedZone
      RecordSets:
        - Name: !Sub hugo.${DomainName}
          Type: A
          TTL: 60
          ResourceRecords:
            - !FindInMap [Nameservers, Hugo, Ipv4Address]
        - Name: !Sub hugo.${DomainName}
          Type: AAAA
          TTL: 60
          ResourceRecords:
            - !FindInMap [Nameservers, Hugo, Ipv6Address]

  ArdainRecordSetGroup:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      Comment: Ardain resource records
      HostedZoneId: !Ref PrimaryHostedZone
      RecordSets:
        - Name: !Sub ardain.${DomainName}
          Type: A
          TTL: 60
          ResourceRecords:
            - !FindInMap [Nameservers, Ardain, Ipv4Address]
        - Name: !Sub ardain.${DomainName}
          Type: AAAA
          TTL: 60
          ResourceRecords:
            - !FindInMap [Nameservers, Ardain, Ipv6Address]

  NameServerRecord:
    Type: Custom::RecordSet
    Properties:
      ServiceToken: !ImportValue cfn-record-set-resource:RecordSetLambdaArn
      HostedZoneId: !Ref PrimaryHostedZone
      Comment: Name Server Record Set (NS)
      Name: !Ref DomainName
      Type: NS
      TTL: 60
      ResourceRecords:
        - !Sub morag.${DomainName}.
        - !Sub niall.${DomainName}.
        - !Sub hugo.${DomainName}.
        - !Sub ardain.${DomainName}.

  SoaRecord:
    Type: Custom::RecordSet
    Properties:
      ServiceToken: !ImportValue cfn-record-set-resource:RecordSetLambdaArn
      HostedZoneId: !Ref PrimaryHostedZone
      Comment: Start Of Authority Record Set (SOA)
      Name: !Ref DomainName
      Type: SOA
      TTL: 60
      ResourceRecords:
        - !Sub morag.${DomainName}. ${SoaContactEmail} 1 7200 900 1209600 86400

Outputs:
  DelegationSetId:
    Description: ID of a reusable delegation set to use for the hosted zone
    Value: !Ref DelegationSetId
    Export:
      Name: !Sub ${AWS::StackName}:DelegationSetId

  HostedZoneId:
    Description: ID of the primary hosted zone
    Value: !Ref PrimaryHostedZone
    Export:
      Name: !Sub ${AWS::StackName}:HostedZoneId
